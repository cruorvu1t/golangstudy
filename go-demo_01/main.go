package main

import "fmt"

func main() {

	number1 := 5
	number2 := 10
	text := "–ü—Ä–∏–≤–µ—Ç, –∑–µ–º–ª—è–Ω–µ!"

	score := 5
	fmt.Println("–°—á—ë—Ç:", score)

	fmt.Println("–î–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏")
	fmt.Println("")
	hello()
	fmt.Println("–ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏")
	fmt.Println("")
	aboba()

	fmt.Println("–í—ã–∑—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é square(5)")
	square(5)
	fmt.Println("–ó–∞–∫–æ–Ω—á–∏–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ square(5)")
	fmt.Println("")

	fmt.Println("–í—ã–∑—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é square(10)")
	square(10)
	fmt.Println("–ó–∞–∫–æ–Ω—á–∏–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ square(10)")

	fmt.Println("")

	fmt.Println("–í—ã–∑—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é square(3)")
	square(3)
	fmt.Println("–ó–∞–∫–æ–Ω—á–∏–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ square(3)")
	fmt.Println("")

	officiantWork("–ò–≤–∞–Ω")
	officiantWork("–û–ª–µ–≥")
	officiantWork("–í–∞—Å–∏–ª–∏–π")

	sum(1, 2, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å!")
	sum(10, 33, "–ö–∞–∫ –¥–µ–ª–∞ –¥—Ä—É–∑—å—è?")
	sum(number1, number2, text)
}

// –î–æ–ø—É—Å—Ç–∏–º –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–º –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ
// –∏ —É –Ω–∞—Å –∑–∞–¥–∞—á–∞:
// –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –≥–æ—Å—Ç—è –Ω—É–∂–Ω–æ:
// 1. –Ω–∞–∫—Ä—ã—Ç—å –µ–º—É —Å—Ç–æ–ª
// 2. –ø–æ–ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å –ø–æ –∏–º–µ–Ω–∏
// 3. –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑
// 4. –ø—Ä–∏–Ω–µ—Å—Ç–∏ –±–ª—é–¥–æ

func sum(a int, b int, greeting string) {
	s := a + b

	fmt.Println(greeting)

	fmt.Println("–°—É–º–º–∞ –∞ + –± =", s)
	fmt.Println("")
}

func officiantWork(name string) {
	fmt.Println("–ù–∞–∫—Ä—ã–≤–∞—é –Ω–∞ —Å—Ç–æ–ª!")
	fmt.Println("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –≥–æ—Å–ø–æ–¥–∏–Ω", name, "!")
	fmt.Println("–Ø –ø—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑!")
	fmt.Println("–Ø –ø—Ä–∏–Ω—ë—Å –±–ª—é–¥–æ!")
	fmt.Println("–ù–µ —Ö–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –∑–∞–∫–∑–∞–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ?")
	fmt.Println("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!")
	fmt.Println("")
}

func hello() {

	fmt.Println("–Ø —Ñ—É–Ω–∫—Ü–∏—è")
	fmt.Println("–ú–µ–Ω—è –≤—ã–∑–≤–∞–ª–∏!")
	fmt.Println("–Ø –∑–∞–≤–µ—Ä—à–∞—é—Å—å")
	fmt.Println("")
}

func aboba() {

	a := 1
	b := 10
	c := 3

	fmt.Println("–°—É–º–º–∞", a+b+c)
	fmt.Println("")
}

func square(x int) {

	fmt.Println("–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ö:", x)
	fmt.Println("x –≤ –∫–≤–∞–¥—Ä–∞—Ç–µ:", x*x)

	/*
	   import (
	   	"fmt"
	   	//"time"
	   	//"math/rand"
	   	)

	   func main() {

	   	for i := 1; i <= 5; i ++ {
	   	fmt.Println("–ò—Ç–µ—Ä–∞—Ü–∏—è", i)

	   	if i ==3{
	   		break
	   		}
	   	}

	*/
	/*
	   import ("fmt"
	   	"time"
	   	"math/rand")

	   func main() {


	   //üê§
	   //üü©
	   //üü•

	   	score := 0

	   	fmt.Println("Get ready!")
	   	fmt.Println("–°—á—ë—Ç:", score)
	   	fmt.Println("")


	   	for {

	   	fmt.Println("------------------------------")
	   	fmt.Println("")
	   	fmt.Println("–ü–æ–¥–ª–µ—Ç–∞—é –∫ —Ç—Ä—É–±–µ!")
	   		fmt.Println("üê§üü©üü©")
	   	fmt.Println("")

	   	fmt.Println("–ü—Ä–æ–ª–µ—Ç–∞—é —á–µ—Ä–µ–∑ —Ç—Ä—É–±—É!")
	   	fmt.Println("üü©üê§üü©")
	   	fmt.Println("")

	   	if rand.Intn(8) == 1 {
	   		fmt.Println("–Ø –≤—Ä–µ–∑–∞–ª—Å—è –≤ —Ç—Ä—É–±—É :(")
	   		fmt.Println("üü©üü•üü©")
	   		fmt.Println("")
	   		break
	   	}

	   	fmt.Println("–ü—Ä–æ–ª–µ—Ç–µ–ª —á–µ—Ä–µ–∑ —Ç—Ä—É–±—É!")
	   	fmt.Println("üü© üü© üê§")
	   	fmt.Println("")

	   	score++
	   	fmt.Println("–°—á—ë—Ç:", score)
	   	fmt.Println("------------------------------")
	   	fmt.Println("")
	   	time.Sleep(1000 * time.Millisecond)
	   	}

	   	fmt.Println("Game over!")
	   	fmt.Println("–í–∞—à –∏—Ç–æ–≥–æ–≤—ã–π —Å—á—ë—Ç", score)
	*/

	/*
	   import (
	   	"fmt"
	   	"time"
	   )

	   func main() {

	   	for i := 1; i <= 5; i++ {
	   		fmt.Println("–ù–æ–≤–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è! i:", i)
	   		time.Sleep(1000 * time.Millisecond)
	   		}
	*/
	/*
	   import (
	   	"fmt"
	   	"math/rand"
	   )

	   	// "math/rand"
	   	// "time"
	   	// 1. –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ —Ü–∏–∫–ª—ã
	   	// 2. –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ break

	   func main() {

	   	fmt.Println("Hello World!")
	   	fmt.Println("–†–∞–Ω–¥–æ–º–Ω–∞—è —Ü–∏—Ñ—Ä–∞", rand.Intn(10))
	   	fmt.Println("")

	   	// 0 1
	   	if rand.Intn(4) == 1 {
	   		fmt.Println("–Ø —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª —Ä–∞–Ω–¥–æ–º–Ω–æ —á–∏—Å–ª–æ –æ–¥–∏–Ω!")
	   		} else {
	   			fmt.Println("–Ø –Ω–µ –ø–æ–ø–∞–ª –≤ –µ–¥–∏–Ω–∏—Ü—É(")
	   			}
	*/

	/*package main

	  import (
	  	"fmt"
	  )


	  func main() {

	  fmt.Println("–ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —É—Ä–æ–≤–Ω—è")
	  fmt.Println("")

	  //üê§
	  //üü©
	  //üü•

	  	for i:=1; i <=5; i++ {

	  	fmt.Println("–¢—Ä—É–±–∞ ‚Ññ", i)
	  	fmt.Println("----")
	  	if i % 2 == 0 {
	  		fmt.Println("üü•üü•")
	  	} else {
	  	fmt.Println("üü©üü©")
	  	}
	  	fmt.Println("----")


	  	fmt.Println("")
	  	}

	  	fmt.Println("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞")
	*/
	/*
	   score := 0

	   fmt.Println("Get Ready")
	   fmt.Println("–°—á—ë—Ç:", score)
	   fmt.Println("")

	   //üê§
	   //üü©

	   	for i:=1; i <=5; i++ {

	   	fmt.Println("------------------------------")
	   	fmt.Println("–í—ã –ø–æ–¥–ª–µ—Ç–∞–µ—Ç–µ –∫ —Ç—Ä—É–±–µ!", i)
	   	fmt.Println("üê§ üü© üü©")
	   	fmt.Println("")

	   	fmt.Println("–í—ã –ø—Ä–æ–ª–µ—Ç–∞–µ—Ç–µ —á–µ—Ä–µ–∑ —Ç—Ä—É–±—É!", i)
	   	fmt.Println("üü©üê§üü©")
	   	fmt.Println("")

	   	fmt.Println("–í—ã –ø—Ä–æ–ª–µ—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ —Ç—Ä—É–±—É!", i)
	   	fmt.Println("üü© üü© üê§")
	   	fmt.Println("")

	   	score++

	   	fmt.Println("–°—á—ë—Ç:", score)
	   	fmt.Println("")
	   	}
	*/

	/*
		number:=999

		fmt.Println("–î–æ", number)

		for i:=1; i <=10; i+=2 {
			score:=5

			fmt.Println("–ò—Ç–µ—Ä–∞—Ü–∏—è ‚Ññ", i)
			fmt.Println("Score", score)
			fmt.Println("")

			score = score + 3

			number++
			}

		fmt.Println("–ü–æ—Å–ª–µ", number)
	*/

	/*
		fmt.Println("Hello, World!")

		fmt.Println("Hello, World!")

		subscribed := false

		fmt.Println("–î–æ —É—Å–ª–æ–≤–∏—è", subscribed)

		if !subscribed {

			fmt.Println("–Ø –≤–∏–∂—É —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω. –ü–æ–¥–ø–∏—à–∏—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!")

		}

		//	if subscribed {

		//

		//	} else {

		//		fmt.Println("–Ø –≤–∏–∂—É —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω. –ü–æ–¥–ø–∏—à–∏—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!")

		//		}

		fmt.Println("–ø–æ—Å–ª–µ —É—Å–ª–æ–≤–∏—è", subscribed)
	*/
	/*	sunny := true


		weekend := false





		if sunny && weekend{


			fmt.Println("–Ø –∏–¥—É –≥—É–ª—è—Ç—å")


			} else {


				fmt.Println("–Ø —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è—é—Å—å")


			}





		computerClub := true


		icecream := false





		if computerClub || icecream {


			fmt.Println("–Ø –∏–¥—É –≥—É–ª—è—Ç—å")


			} else {


				fmt.Println("–Ø —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è—é—Å—å")


			} */

	/*	score := 5


			if score > 6 && score < 15 {


				fmt.Println("–¢—ã –ø–æ–ø–∞–ª –≤ —è–±–ª–æ—á–∫–æ!")


				} else {


					fmt.Println("–¢—ã –Ω–µ –ø–æ–ø–∞–ª –≤ —è–±–ª–æ—á–∫–æ")


					}




















		//	score := 21


			if score <6 || score > 16{


			fmt.Println("–¢—ã –ø–æ–ø–∞–ª –≤ –∑–æ–Ω—É")


			} else {


				fmt.Println("–¢—ã –Ω–µ –ø–æ–ø–∞–ª –≤ –∑–æ–Ω—É")


				}


	*/

	/*	number := 15





		ravno5 := number == 5


		bolshe12 := number > 12





		fmt.Println(ravno5)


		fmt.Println(bolshe12)*/

	/*score := 50





	if score == 12 {


		fmt.Println("–î—é–∂–∏–Ω–∞!")


	} else if score == 21{


		fmt.Println("–û—á–∫–æ")


		} else if score == 50 {


			fmt.Println("–ü–æ–ª—Ç–∏–Ω–Ω–∏–∫!")


			} else {


			fmt.Println("–¢—ã –Ω–µ –ø–æ–ø–∞–ª –Ω–∏ –≤ –∫–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")


	}*/

	/*score := 16


	if score > 15 {


		fmt.Println("–¢—ã –º–µ–≥–∞-–∫—Ä–∞—Å–∞–≤—á–∏–∫!")


	} else if score > 10 {


		fmt.Println("–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫!")


	} else {


		fmt.Println("–¢–µ–±–µ –Ω—É–∂–Ω–æ –µ—â–µ –º–Ω–æ–≥–æ–º—É –Ω–∞—É—á–∏—Ç—å—Å—è")





	}





	fmt.Println("–°—á—ë—Ç: ", score)


	fmt.Println("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π –∏–≥—Ä—ã! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â–µ!") */

	/*


		score := 10





		if score > 10 {


				if score > 15 {


					fmt.Println("–¢—ã –º–µ–≥–∞-–∫—Ä–∞—Å–∞–≤—á–∏–∫!")


				} else {


					fmt.Println("–¢—ã –∫—Ä–∞—Å–∞–≤—á–∏–∫!")


				}


			} else {


				fmt.Println("–¢–µ–±–µ –Ω—É–∂–Ω–æ –µ—â–µ –º–Ω–æ–≥–æ–º—É –Ω–∞—É—á–∏—Ç—å—Å—è")


			}





			fmt.Println("–°—á—ë—Ç: ", score)


			fmt.Println("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π –∏–≥—Ä—ã! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â–µ!")


	*/

	/*	number := 7





		number ++





		number --





		fmt.Println("number:", number)





		text := "hello"


		text += " world"





		fmt.Println("text: ", text) */

	/*	var number int


		var text string


		var drob float64


		var boolean bool





		fmt.Println("number:", number)


		fmt.Println("text:", text)


		fmt.Println("drob:", drob)


		fmt.Println("boolean:", boolean) */

	/*	var number int


		var text string





		fmt.Println("number", number)


		fmt.Println("text", text)





		number = 15


		text = "Hello world"





		fmt.Println("number", number)


		fmt.Println("text", text) */

	/*	score := 12


		s := "hello"





		var number int = 10


		var text string = "hi" */

	/*	text := "hello"


		text = text + " world"


		fmt.Println(text) */

	/*	score := 11


			celoe := score / 3


			ostatok := score % 3





		//		score = score + 10


		//		score = score + 20


		//		score = score - 15


		//		score = score / 3


		//		score = score * 10





			fmt.Println("–°—á—ë—Ç: ", score, celoe, ostatok) */

	/*


		text :="hello"


		score := 0


		drob := 0.5





		fmt.Println(text)


		fmt.Println(score)


		fmt.Println(drob)





		subscribed := false





		fmt.Println("–ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –ú–∏—Å—Ç–µ—Ä–∞ –ë–∏—Å—Ç–∞?", subscribed)


	*/

	/*


	   text1 := "Get Ready"


	   text2 := "Game Over"


	   score := 0





	   fmt.Println(text1, score)


	   fmt.Println("–í–∞—à —Å—á—ë—Ç", score)


	   score = score + 1





	   fmt.Println("–í—ã –ø—Ä–æ–ª–µ—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ —Ç—Ä—É–±—É", score)


	   fmt.Println("–í–∞—à —Å—á—ë—Ç", score)


	   score = score + 1


	   fmt.Println("–í—ã –ø—Ä–æ–ª–µ—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ —Ç—Ä—É–±—É", score)





	   fmt.Println("–í–∞—à —Å—á—ë—Ç", score)


	   score = score + 1


	   fmt.Println("–í—ã –ø—Ä–æ–ª–µ—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ —Ç—Ä—É–±—É", score)





	   fmt.Println("–í—Ä–µ–∑–∞–ª–∏—Å—å –≤ —Ç—Ä—É–±—É")


	   fmt.Println(text2)


	*/

}
